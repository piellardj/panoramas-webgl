{"version":3,"file":"main.min.js","mappings":"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","sources":["webpack://panoramas-webgl/./src/ts/converter.ts","webpack://panoramas-webgl/./src/ts/format-utils.ts","webpack://panoramas-webgl/./src/ts/gl-utils/gl-canvas.ts","webpack://panoramas-webgl/./src/ts/gl-utils/gl-resource.ts","webpack://panoramas-webgl/./src/ts/gl-utils/matrix/mat4.ts","webpack://panoramas-webgl/./src/ts/gl-utils/matrix/vec3.ts","webpack://panoramas-webgl/./src/ts/gl-utils/shader-manager.ts","webpack://panoramas-webgl/./src/ts/gl-utils/shader-sources.ts","webpack://panoramas-webgl/./src/ts/gl-utils/shader.ts","webpack://panoramas-webgl/./src/ts/gl-utils/vbo.ts","webpack://panoramas-webgl/./src/ts/gl-utils/viewport.ts","webpack://panoramas-webgl/./src/ts/main.ts","webpack://panoramas-webgl/./src/ts/parameters.ts","webpack://panoramas-webgl/./src/ts/viewer.ts","webpack://panoramas-webgl/webpack/bootstrap","webpack://panoramas-webgl/webpack/startup"],"sourcesContent":["import { gl } from \"./gl-utils/gl-canvas\";\r\nimport GLResource from \"./gl-utils/gl-resource\";\r\nimport Shader from \"./gl-utils/shader\";\r\nimport * as ShaderManager from \"./gl-utils/shader-manager\";\r\nimport VBO from \"./gl-utils/vbo\";\r\n\r\nimport { Format } from \"./format-utils\";\r\nimport { Parameters } from \"./parameters\";\r\n\r\nclass Converter extends GLResource {\r\n    private _shaderBoxToBox: Shader;\r\n    private _shaderBoxToPlanet: Shader;\r\n    private _shaderBoxToSphere: Shader;\r\n\r\n    private _shaderSphereToBox: Shader;\r\n    private _shaderSphereToPlanet: Shader;\r\n    private _shaderSphereToSphere: Shader;\r\n\r\n    private _shaderPlanetToBox: Shader;\r\n    private _shaderPlanetToPlanet: Shader;\r\n    private _shaderPlanetToSphere: Shader;\r\n\r\n    private _vbo: VBO;\r\n\r\n    constructor() {\r\n        super(gl);\r\n\r\n        this._vbo = VBO.createQuad(gl, -1, -1, 1, 1);\r\n\r\n        this.buildShader(\"_shaderBoxToBox\",         \"converter.vert\", \"converterBoxToBox.frag\");\r\n        this.buildShader(\"_shaderBoxToPlanet\",      \"converter.vert\", \"converterBoxToPlanet.frag\");\r\n        this.buildShader(\"_shaderBoxToSphere\",      \"converter.vert\", \"converterBoxToSphere.frag\");\r\n\r\n        this.buildShader(\"_shaderSphereToBox\",      \"converter.vert\", \"converterSphereToBox.frag\");\r\n        this.buildShader(\"_shaderSphereToPlanet\",   \"converter.vert\", \"converterSphereToPlanet.frag\");\r\n        this.buildShader(\"_shaderSphereToSphere\",   \"converter.vert\", \"converterSphereToSphere.frag\");\r\n\r\n        this.buildShader(\"_shaderPlanetToBox\",      \"converter.vert\", \"converterPlanetToBox.frag\");\r\n        this.buildShader(\"_shaderPlanetToPlanet\",   \"converter.vert\", \"converterPlanetToPlanet.frag\");\r\n        this.buildShader(\"_shaderPlanetToSphere\",   \"converter.vert\", \"converterPlanetToSphere.frag\");\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        if (this._vbo) {\r\n            this._vbo.freeGLResources();\r\n            this._vbo = null;\r\n        }\r\n\r\n        this.deleteShader(\"_shaderBoxToBox\");\r\n        this.deleteShader(\"_shaderBoxToPlanet\");\r\n        this.deleteShader(\"_shaderBoxToSphere\");\r\n\r\n        this.deleteShader(\"_shaderSphereToBox\");\r\n        this.deleteShader(\"_shaderSphereToPlanet\");\r\n        this.deleteShader(\"_shaderSphereToSphere\");\r\n\r\n        this.deleteShader(\"_shaderPlanetToBox\");\r\n        this.deleteShader(\"_shaderPlanetToPlanet\");\r\n        this.deleteShader(\"_shaderPlanetToSphere\");\r\n    }\r\n\r\n    public draw(texture: WebGLTexture): void {\r\n        const shader = this.getShader(Parameters.inputFormat, Parameters.outputFormat);\r\n\r\n        if (shader && texture) {\r\n            /* tslint:disable:no-string-literal */\r\n            shader.u[\"uTexture\"].value = texture;\r\n            shader.u[\"uPaddingTop\"].value = Parameters.paddingTop;\r\n            shader.u[\"uPaddingBottom\"].value = Parameters.paddingBottom;\r\n            shader.u[\"uPaddingBack\"].value = Parameters.paddingBack;\r\n            shader.u[\"uRotateZ\"].value = Parameters.rotateZ;\r\n            shader.u[\"uFlipVertically\"].value = Parameters.flipVertically ? -1 : 1;\r\n            /* tslint:enable:no-string-literal */\r\n\r\n            shader.use();\r\n            shader.bindUniformsAndAttributes();\r\n\r\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n        }\r\n    }\r\n\r\n    private deleteShader(name: string): void {\r\n        /* tslint:disable:no-string-literal */\r\n        if (this[name]) {\r\n            this[name].freeGLResources();\r\n            this[name] = null;\r\n        }\r\n        /* tslint:enable:no-string-literal */\r\n    }\r\n\r\n    private buildShader(name: string, vertex: string, fragment: string): void {\r\n        ShaderManager.buildShader(\r\n            {\r\n                fragmentFilename: fragment,\r\n                vertexFilename: vertex,\r\n            },\r\n            (shader) => {\r\n                if (shader !== null) {\r\n                    /* tslint:disable:no-string-literal */\r\n                    this[name] = shader;\r\n                    this[name].a[\"aCorner\"].VBO = this._vbo;\r\n                    /* tslint:enable:no-string-literal */\r\n                }\r\n            });\r\n    }\r\n\r\n    private getShader(inputFormat: Format, outputFormat: Format): Shader {\r\n        if (inputFormat === Format.Skybox) {\r\n            if (outputFormat === Format.Skybox) {\r\n                return this._shaderBoxToBox;\r\n            } else if (outputFormat === Format.Skysphere) {\r\n                return this._shaderBoxToSphere;\r\n            } else /* if (outputFormat === Format.Tinyplanet) */ {\r\n                return this._shaderBoxToPlanet;\r\n            }\r\n        } else if (inputFormat === Format.Skysphere) {\r\n            if (outputFormat === Format.Skybox) {\r\n                return this._shaderSphereToBox;\r\n            } else if (outputFormat === Format.Skysphere) {\r\n                return this._shaderSphereToSphere;\r\n            } else /* if (outputFormat === Format.Tinyplanet) */ {\r\n                return this._shaderSphereToPlanet;\r\n            }\r\n        } else if (inputFormat === Format.Tinyplanet) {\r\n            if (outputFormat === Format.Skybox) {\r\n                return this._shaderPlanetToBox;\r\n            } else if (outputFormat === Format.Skysphere) {\r\n                return this._shaderPlanetToSphere;\r\n            } else /* if (outputFormat === Format.Tinyplanet) */ {\r\n                return this._shaderPlanetToPlanet;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Converter;\r\n","enum Format {\r\n    Skybox = \"skybox\",\r\n    Skysphere = \"skysphere\",\r\n    Tinyplanet = \"tinyplanet\",\r\n}\r\n\r\nclass FormatUtils {\r\n    public static guessFormat(image: HTMLImageElement): Format {\r\n        if (FormatUtils.mayBeSkybox(image)) {\r\n            return Format.Skybox;\r\n        }\r\n\r\n        const ratio = image.width / image.height;\r\n        if (Math.abs(ratio - 1) < 0.1) {\r\n            return Format.Tinyplanet;\r\n        }\r\n\r\n        return Format.Skysphere;\r\n    }\r\n\r\n    public static parseString(str: string): Format {\r\n        if (str === Format.Skybox) {\r\n            return Format.Skybox;\r\n        } else if (str === Format.Tinyplanet) {\r\n            return Format.Tinyplanet;\r\n        } else {\r\n            return Format.Skysphere;\r\n        }\r\n    }\r\n\r\n    public static ratio(format: Format): number {\r\n        if (format === Format.Skybox) {\r\n            return 4 / 3;\r\n        } else if (format === Format.Skysphere) {\r\n            return 2;\r\n        } else /* if (format === Format.Tinyplanet) */ {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    private static mayBeSkybox(image: HTMLImageElement): boolean {\r\n        const context = document.createElement(\"canvas\").getContext(\"2d\");\r\n        context.canvas.width = 8;\r\n        context.canvas.height = 6;\r\n        context.drawImage(image, 0, 0, context.canvas.width, context.canvas.height);\r\n\r\n        const testedPixels = [\r\n            {x: 0, y: 0}, {x: 5, y: 0}, {x: 6, y: 0}, {x: 7, y: 0},   // top\r\n            {x: 0, y: 5}, {x: 5, y: 5}, {x: 6, y: 5}, {x: 7, y: 5},  // bottom\r\n        ];\r\n\r\n        const reference = context.getImageData(testedPixels[0].x, testedPixels[0].y, 1, 1).data;\r\n        for (const tested of testedPixels) {\r\n            const sample = context.getImageData(tested.x, tested.y, 1, 1).data;\r\n\r\n            for (let i = 0; i < 4; ++i) {\r\n                if (sample[i] !== reference[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private constructor() { }\r\n}\r\n\r\nexport {\r\n    Format,\r\n    FormatUtils,\r\n};\r\n","import \"../page-interface-generated\";\r\n\r\nlet gl: WebGLRenderingContext = null;\r\n\r\n/** Initializes a WebGL context */\r\nfunction initGL(flags: any): boolean {\r\n    function setError(message: string) {\r\n        Page.Demopage.setErrorMessage(\"webgl-support\", message);\r\n    }\r\n\r\n    const canvas = Page.Canvas.getCanvas();\r\n\r\n    gl = canvas.getContext(\"webgl\", flags) as WebGLRenderingContext;\r\n    if (gl == null) {\r\n        gl = canvas.getContext(\"experimental-webgl\", flags) as WebGLRenderingContext;\r\n        if (gl == null) {\r\n            setError(\"Your browser or device does not seem to support WebGL.\");\r\n            return false;\r\n        }\r\n\r\n        setError(\"Your browser or device only supports experimental WebGL.\\n\" +\r\n            \"The simulation may not run as expected.\");\r\n    }\r\n\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.BLEND);\r\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n\r\n    return true;\r\n}\r\n\r\n/* Adjusts the GL canvas size to the actual canvas element size on the page */\r\nfunction adjustSize(hidpi: boolean = false): void {\r\n    const cssPixel: number = (hidpi) ? window.devicePixelRatio : 1;\r\n    const canvas = gl.canvas as HTMLCanvasElement;\r\n\r\n    const width: number = Math.floor(canvas.clientWidth * cssPixel);\r\n    const height: number = Math.floor(canvas.clientHeight * cssPixel);\r\n    if (canvas.width !== width || canvas.height !== height) {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n    }\r\n}\r\n\r\nexport {\r\n    adjustSize,\r\n    initGL,\r\n    gl,\r\n};\r\n","abstract class GLResource {\r\n    private _gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this._gl = gl;\r\n    }\r\n\r\n    public gl(): WebGLRenderingContext {\r\n        return this._gl;\r\n    }\r\n\r\n    public abstract freeGLResources(): void;\r\n}\r\n\r\nexport default GLResource;\r\n","import { Vec3 } from \"./vec3\";\r\n\r\n/* Column-first */\r\nclass Mat4 {\r\n    private static _tmpMatrix = null; // helps for internal computing\r\n\r\n    private static get tmpMatrix(): Mat4 {\r\n        if (Mat4._tmpMatrix === null) {\r\n            Mat4._tmpMatrix = new Mat4();\r\n        }\r\n\r\n        return Mat4._tmpMatrix;\r\n    }\r\n\r\n    private _val: Float32Array;\r\n\r\n    constructor() {\r\n        this._val = new Float32Array(16);\r\n        this.identity();\r\n    }\r\n\r\n    public get val(): Float32Array {\r\n        return this._val;\r\n    }\r\n\r\n    public identity(): void {\r\n        for (let i = 0; i < 16; ++i) {\r\n            this._val[i] = 0;\r\n        }\r\n\r\n        this._val[0] = 1;\r\n        this._val[5] = 1;\r\n        this._val[10] = 1;\r\n        this._val[15] = 1;\r\n    }\r\n\r\n    public lookAt(eye: Vec3, center: Vec3, up: Vec3): void {\r\n        if (eye.equals(center)) {\r\n            this.identity();\r\n            return;\r\n        }\r\n\r\n        const z = Vec3.substract(eye, center);\r\n        z.normalize();\r\n\r\n        const x = Vec3.crossProduct(up, z);\r\n        x.normalize();\r\n\r\n        const y = Vec3.crossProduct(z, x);\r\n        y.normalize();\r\n\r\n        this._val[0] = x.x;\r\n        this._val[1] = y.x;\r\n        this._val[2] = z.x;\r\n        this._val[3] = 0;\r\n        this._val[4] = x.y;\r\n        this._val[5] = y.y;\r\n        this._val[6] = z.y;\r\n        this._val[7] = 0;\r\n        this._val[8] = x.z;\r\n        this._val[9] = y.z;\r\n        this._val[10] = z.z;\r\n        this._val[11] = 0;\r\n        this._val[12] = -Vec3.dotProduct(x, eye);\r\n        this._val[13] = -Vec3.dotProduct(y, eye);\r\n        this._val[14] = -Vec3.dotProduct(z, eye);\r\n        this._val[15] = 1;\r\n    }\r\n\r\n    public multiplyRight(m2: Mat4) {\r\n        const tmp = Mat4.tmpMatrix._val;\r\n        const myself = this._val;\r\n        const other = m2._val;\r\n\r\n        for (let iCol = 0; iCol < 4; ++iCol) {\r\n            for (let iRow = 0; iRow < 4; ++iRow) {\r\n                tmp[4 * iCol + iRow] = 0;\r\n\r\n                for (let i = 0; i < 4; ++i) {\r\n                    tmp[4 * iCol + iRow] += myself[4 * i + iRow] * other[4 * iCol + i];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.swapWithTmpMatrix();\r\n    }\r\n\r\n    /* Returns false is the matrix cannot be inverted. */\r\n    public invert(): boolean {\r\n        // shortcuts\r\n        const m = this._val;\r\n        /* tslint:disable:one-variable-per-declaration */\r\n        const m00 = m[0], m01 = m[1], m02 = m[2], m03 = m[3];\r\n        const m10 = m[4], m11 = m[5], m12 = m[6], m13 = m[7];\r\n        const m20 = m[8], m21 = m[9], m22 = m[10], m23 = m[11];\r\n        const m30 = m[12], m31 = m[13], m32 = m[14], m33 = m[15];\r\n        /* tslint:enable:one-variable-per-declaration */\r\n\r\n        const b00 = m00 * m11 - m01 * m10;\r\n        const b01 = m00 * m12 - m02 * m10;\r\n        const b02 = m00 * m13 - m03 * m10;\r\n        const b03 = m01 * m12 - m02 * m11;\r\n        const b04 = m01 * m13 - m03 * m11;\r\n        const b05 = m02 * m13 - m03 * m12;\r\n        const b06 = m20 * m31 - m21 * m30;\r\n        const b07 = m20 * m32 - m22 * m30;\r\n        const b08 = m20 * m33 - m23 * m30;\r\n        const b09 = m21 * m32 - m22 * m31;\r\n        const b10 = m21 * m33 - m23 * m31;\r\n        const b11 = m22 * m33 - m23 * m32;\r\n\r\n        // Compute the determinant\r\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) {\r\n            return false;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        /* Compute the invert and store it on Mat4.tmp matrix */\r\n        const tmpVals = Mat4.tmpMatrix._val;\r\n        tmpVals[0] = (m11 * b11 - m12 * b10 + m13 * b09) * det;\r\n        tmpVals[1] = (m02 * b10 - m01 * b11 - m03 * b09) * det;\r\n        tmpVals[2] = (m31 * b05 - m32 * b04 + m33 * b03) * det;\r\n        tmpVals[3] = (m22 * b04 - m21 * b05 - m23 * b03) * det;\r\n        tmpVals[4] = (m12 * b08 - m10 * b11 - m13 * b07) * det;\r\n        tmpVals[5] = (m00 * b11 - m02 * b08 + m03 * b07) * det;\r\n        tmpVals[6] = (m32 * b02 - m30 * b05 - m33 * b01) * det;\r\n        tmpVals[7] = (m20 * b05 - m22 * b02 + m23 * b01) * det;\r\n        tmpVals[8] = (m10 * b10 - m11 * b08 + m13 * b06) * det;\r\n        tmpVals[9] = (m01 * b08 - m00 * b10 - m03 * b06) * det;\r\n        tmpVals[10] = (m30 * b04 - m31 * b02 + m33 * b00) * det;\r\n        tmpVals[11] = (m21 * b02 - m20 * b04 - m23 * b00) * det;\r\n        tmpVals[12] = (m11 * b07 - m10 * b09 - m12 * b06) * det;\r\n        tmpVals[13] = (m00 * b09 - m01 * b07 + m02 * b06) * det;\r\n        tmpVals[14] = (m31 * b01 - m30 * b03 - m32 * b00) * det;\r\n        tmpVals[15] = (m20 * b03 - m21 * b01 + m22 * b00) * det;\r\n\r\n        this.swapWithTmpMatrix();\r\n\r\n        return true;\r\n    }\r\n\r\n    public perspective(fovy: number, aspectRatio: number, nearPlane: number, farPlane: number): void {\r\n        const f = 1 / Math.tan(fovy / 2);\r\n\r\n        this._val[0] = f / aspectRatio;\r\n        this._val[1] = 0;\r\n        this._val[2] = 0;\r\n        this._val[3] = 0;\r\n        this._val[4] = 0;\r\n        this._val[5] = f;\r\n        this._val[6] = 0;\r\n        this._val[7] = 0;\r\n        this._val[8] = 0;\r\n        this._val[9] = 0;\r\n        this._val[11] = -1;\r\n        this._val[12] = 0;\r\n        this._val[13] = 0;\r\n        this._val[15] = 0;\r\n\r\n        if (farPlane === Infinity) {\r\n            this._val[10] = -1;\r\n            this._val[14] = -2 * nearPlane;\r\n        } else {\r\n            const tmp = 1 / (nearPlane - farPlane);\r\n            this._val[10] = (farPlane + nearPlane) * tmp;\r\n            this._val[14] = (2 * farPlane * nearPlane) * tmp;\r\n        }\r\n    }\r\n\r\n    public perspectiveInverse(fovy: number, aspectRatio: number, nearPlane: number, farPlane: number): void {\r\n        const f = Math.tan(fovy / 2);\r\n\r\n        this._val[0] = aspectRatio * f;\r\n        this._val[1] = 0;\r\n        this._val[2] = 0;\r\n        this._val[3] = 0;\r\n        this._val[4] = 0;\r\n        this._val[5] = f;\r\n        this._val[6] = 0;\r\n        this._val[7] = 0;\r\n        this._val[8] = 0;\r\n        this._val[9] = 0;\r\n        this._val[10] = 0;\r\n        this._val[12] = 0;\r\n        this._val[13] = 0;\r\n        this._val[14] = -1;\r\n\r\n        if (farPlane === Infinity) {\r\n            this._val[11] = -0.5;\r\n            this._val[15] = 0.5 / nearPlane;\r\n        } else {\r\n            const tmp = 0.5 / (nearPlane * farPlane);\r\n            this._val[11] = (nearPlane - farPlane) * tmp;\r\n            this._val[15] = (nearPlane + farPlane) * tmp;\r\n        }\r\n    }\r\n\r\n    private swapWithTmpMatrix(): void {\r\n        const tmp = Mat4.tmpMatrix._val;\r\n        Mat4.tmpMatrix._val = this._val;\r\n        this._val = tmp;\r\n    }\r\n}\r\n\r\nexport { Mat4 };\r\n","const EPSILON = 0.0001;\r\n\r\nclass Vec3 {\r\n    public static dotProduct(v1: Vec3, v2: Vec3): number {\r\n        return v1._val[0] * v2._val[0] +\r\n            v1._val[1] * v2._val[1] +\r\n            v1._val[2] * v2._val[2];\r\n    }\r\n\r\n    public static crossProduct(v1: Vec3, v2: Vec3): Vec3 {\r\n        return new Vec3(\r\n            v1._val[1] * v2._val[2] - v1._val[2] * v2._val[1],\r\n            v1._val[2] * v2._val[0] - v1._val[0] * v2._val[2],\r\n            v1._val[0] * v2._val[1] - v1._val[1] * v2._val[0]);\r\n    }\r\n\r\n    public static substract(v1: Vec3, v2: Vec3): Vec3 {\r\n        return new Vec3(\r\n            v1._val[0] - v2._val[0],\r\n            v1._val[1] - v2._val[1],\r\n            v1._val[2] - v2._val[2]);\r\n    }\r\n\r\n    private _val: Float32Array;\r\n\r\n    constructor(x: number, y: number, z: number) {\r\n        this._val = new Float32Array(3);\r\n        this._val[0] = x;\r\n        this._val[1] = y;\r\n        this._val[2] = z;\r\n    }\r\n\r\n    public get x(): number {\r\n        return this._val[0];\r\n    }\r\n\r\n    public get y(): number {\r\n        return this._val[1];\r\n    }\r\n\r\n    public get z(): number {\r\n        return this._val[2];\r\n    }\r\n\r\n    public equals(other: Vec3): boolean {\r\n        return Math.abs(this._val[0] - other._val[0]) < EPSILON &&\r\n            Math.abs(this._val[1] - other._val[1]) < EPSILON &&\r\n            Math.abs(this._val[2] - other._val[2]) < EPSILON;\r\n    }\r\n\r\n    public divideByScalar(scalar: number): void {\r\n        this._val[0] /= scalar;\r\n        this._val[1] /= scalar;\r\n        this._val[2] /= scalar;\r\n    }\r\n\r\n    public substract(other: Vec3): void {\r\n        this._val[0] -= other._val[0];\r\n        this._val[1] -= other._val[1];\r\n        this._val[2] -= other._val[2];\r\n    }\r\n\r\n    public get length(): number {\r\n        const norm = this._val[0] * this._val[0] +\r\n            this._val[1] * this._val[1] +\r\n            this._val[2] * this._val[2];\r\n        return Math.sqrt(norm);\r\n    }\r\n\r\n    /* Return false if vector cannot be normalized because it's null. */\r\n    public normalize(): boolean {\r\n        if (Math.abs(this._val[0]) < EPSILON &&\r\n            Math.abs(this._val[1]) < EPSILON &&\r\n            Math.abs(this._val[2]) < EPSILON) {\r\n            this._val[0] = 0;\r\n            this._val[1] = 0;\r\n            this._val[2] = 0;\r\n            return false;\r\n        }\r\n\r\n        this.divideByScalar(this.length);\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport { Vec3 };\r\n","import { gl } from \"./gl-canvas\";\r\nimport Shader from \"./shader\";\r\nimport * as ShaderSources from \"./shader-sources\";\r\n\r\ntype RegisterCallback = (success: boolean, shader: Shader | null) => void;\r\n\r\ninterface IShaderInfos {\r\n    fragmentFilename: string;\r\n    vertexFilename: string;\r\n}\r\n\r\ninterface ICachedShader {\r\n    shader: Shader;\r\n    infos: IShaderInfos;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: RegisterCallback[];\r\n}\r\n\r\nconst cachedShaders: { [id: string]: ICachedShader} = {};\r\n\r\nfunction getShader(name: string): Shader | null {\r\n    return cachedShaders[name].shader;\r\n}\r\n\r\ntype BuildCallback = (builtShader: Shader | null) => void;\r\n\r\nfunction buildShader(infos: IShaderInfos, callback: BuildCallback) {\r\n    let sourcesPending = 2;\r\n    let sourcesFailed = 0;\r\n\r\n    function loadedSource(success: boolean) {\r\n        sourcesPending--;\r\n        if (!success) {\r\n            sourcesFailed++;\r\n        }\r\n\r\n        if (sourcesPending === 0) {\r\n            let shader = null;\r\n\r\n            if (sourcesFailed === 0) {\r\n                const vert = ShaderSources.getSource(infos.vertexFilename);\r\n                const frag = ShaderSources.getSource(infos.fragmentFilename);\r\n                shader = new Shader(gl, vert, frag);\r\n            }\r\n\r\n            callback(shader);\r\n        }\r\n    }\r\n\r\n    ShaderSources.loadSource(infos.vertexFilename, loadedSource);\r\n    ShaderSources.loadSource(infos.fragmentFilename, loadedSource);\r\n}\r\n\r\nfunction registerShader(name: string, infos: IShaderInfos, callback: RegisterCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedShader) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed, cached.shader);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedShaders[name] === \"undefined\") {\r\n        cachedShaders[name] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            infos,\r\n            pending: true,\r\n            shader: null,\r\n        };\r\n        const cached = cachedShaders[name];\r\n\r\n        buildShader(infos, (builtShader) => {\r\n            cached.pending = false;\r\n            cached.failed = builtShader === null;\r\n            cached.shader = builtShader;\r\n\r\n            callAndClearCallbacks(cached);\r\n        });\r\n    } else {\r\n        const cached = cachedShaders[name];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction deleteShader(name: string) {\r\n    if (cachedShaders[name]) {\r\n        if (cachedShaders[name].shader) {\r\n            cachedShaders[name].shader.freeGLResources();\r\n        }\r\n        delete cachedShaders[name];\r\n    }\r\n}\r\n\r\nexport {\r\n    buildShader,\r\n    getShader,\r\n    IShaderInfos,\r\n    registerShader,\r\n    deleteShader,\r\n};\r\n","type LoadCallback = (success: boolean)  => void;\r\n\r\ninterface ICachedSource {\r\n    text: string;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: LoadCallback[];\r\n}\r\n\r\nconst cachedSources: { [id: string]: ICachedSource } = {};\r\n\r\n/* Fetches asynchronously the shader source from server and stores it in cache. */\r\nfunction loadSource(filename: string, callback: LoadCallback) {\r\n    function callAndClearCallbacks(cached: ICachedSource) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedSources[filename] === \"undefined\") {\r\n        cachedSources[filename] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            pending: true,\r\n            text: null,\r\n        };\r\n        const cached = cachedSources[filename];\r\n\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", \"./shaders/\" + filename, true);\r\n        xhr.onload = () => {\r\n            if (xhr.readyState === 4) {\r\n                cached.pending = false;\r\n\r\n                if (xhr.status === 200) {\r\n                    cached.text = xhr.responseText;\r\n                    cached.failed = false;\r\n                } else {\r\n                    console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n                    cached.failed = true;\r\n                }\r\n\r\n                callAndClearCallbacks(cached);\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n            cached.pending = false;\r\n            cached.failed = true;\r\n            callAndClearCallbacks(cached);\r\n        };\r\n\r\n        xhr.send(null);\r\n    } else {\r\n        const cached = cachedSources[filename];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSource(filename: string): string {\r\n    return cachedSources[filename].text;\r\n}\r\n\r\nexport {\r\n    getSource,\r\n    loadSource,\r\n};\r\n","import GLResource from \"./gl-resource\";\r\nimport VBO from \"./vbo\";\r\n\r\nfunction notImplemented(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    alert(\"NOT IMPLEMENTED YET\");\r\n}\r\n\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1fv(location, value);\r\n    } else {\r\n        gl.uniform1f(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformFloat2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4fv(location, value);\r\n}\r\n\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1iv(location, value);\r\n    } else {\r\n        gl.uniform1iv(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformInt2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: boolean | number): void {\r\n    gl.uniform1i(location, +value);\r\n}\r\n\r\nfunction bindUniformBool2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformFloatMat2(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix2fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat3(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix3fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat4(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix4fv(location, false, value);\r\n}\r\n\r\nfunction bindSampler2D(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                       value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_2D, value);\r\n}\r\n\r\nfunction bindSamplerCube(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                         value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n}\r\n\r\n/* From WebGL spec:\r\n* http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14 */\r\nconst types = {\r\n    0x8B50: { str: \"FLOAT_VEC2\", binder: bindUniformFloat2v },\r\n    0x8B51: { str: \"FLOAT_VEC3\", binder: bindUniformFloat3v },\r\n    0x8B52: { str: \"FLOAT_VEC4\", binder: bindUniformFloat4v },\r\n    0x8B53: { str: \"INT_VEC2\", binder: bindUniformInt2v },\r\n    0x8B54: { str: \"INT_VEC3\", binder: bindUniformInt3v },\r\n    0x8B55: { str: \"INT_VEC4\", binder: bindUniformInt4v },\r\n    0x8B56: { str: \"BOOL\", binder: bindUniformBool },\r\n    0x8B57: { str: \"BOOL_VEC2\", binder: bindUniformBool2v },\r\n    0x8B58: { str: \"BOOL_VEC3\", binder: bindUniformBool3v },\r\n    0x8B59: { str: \"BOOL_VEC4\", binder: bindUniformBool4v },\r\n    0x8B5A: { str: \"FLOAT_MAT2\", binder: bindUniformFloatMat2 },\r\n    0x8B5B: { str: \"FLOAT_MAT3\", binder: bindUniformFloatMat3 },\r\n    0x8B5C: { str: \"FLOAT_MAT4\", binder: bindUniformFloatMat4 },\r\n    0x8B5E: { str: \"SAMPLER_2D\", binder: bindSampler2D },\r\n    0x8B60: { str: \"SAMPLER_CUBE\", binder: bindSamplerCube },\r\n    0x1400: { str: \"BYTE\", binder: notImplemented },\r\n    0x1401: { str: \"UNSIGNED_BYTE\", binder: notImplemented },\r\n    0x1402: { str: \"SHORT\", binder: notImplemented },\r\n    0x1403: { str: \"UNSIGNED_SHORT\", binder: notImplemented },\r\n    0x1404: { str: \"INT\", binder: bindUniformInt },\r\n    0x1405: { str: \"UNSIGNED_INT\", binder: notImplemented },\r\n    0x1406: { str: \"FLOAT\", binder: bindUniformFloat },\r\n};\r\n\r\ninterface IShaderUniform {\r\n    value: boolean | boolean[] | number | number[] | WebGLTexture | WebGLTexture[];\r\n    loc: WebGLUniformLocation;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\ninterface IShaderAttribute {\r\n    VBO: VBO;\r\n    loc: GLint;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\nclass ShaderProgram extends GLResource {\r\n    public u: IShaderUniform[];\r\n    public a: IShaderAttribute[];\r\n\r\n    private id: WebGLProgram;\r\n    private uCount: number;\r\n    private aCount: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string) {\r\n        function createShader(type: GLenum, source: string): WebGLShader {\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader, source);\r\n            gl.compileShader(shader);\r\n\r\n            const compileSuccess = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n            if (!compileSuccess) {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n                gl.deleteShader(shader);\r\n                return null;\r\n            }\r\n\r\n            return shader;\r\n        }\r\n\r\n        super(gl);\r\n\r\n        this.id = null;\r\n        this.uCount = 0;\r\n        this.aCount = 0;\r\n\r\n        const vertexShader = createShader(gl.VERTEX_SHADER, vertexSource);\r\n        const fragmentShader = createShader(gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n        const id = gl.createProgram();\r\n        gl.attachShader(id, vertexShader);\r\n        gl.attachShader(id, fragmentShader);\r\n        gl.linkProgram(id);\r\n\r\n        const linkSuccess = gl.getProgramParameter(id, gl.LINK_STATUS);\r\n        if (!linkSuccess) {\r\n            console.error(gl.getProgramInfoLog(id));\r\n            gl.deleteProgram(id);\r\n        } else {\r\n            this.id = id;\r\n\r\n            this.introspection();\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteProgram(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public use(): void {\r\n        super.gl().useProgram(this.id);\r\n    }\r\n\r\n    public bindUniforms(): void {\r\n        const gl: WebGLRenderingContext = super.gl();\r\n        let currTextureUnitNb: number = 0;\r\n\r\n        Object.keys(this.u).forEach((uName) => {\r\n            const uniform = this.u[uName];\r\n            if (uniform.value !== null) {\r\n                if (uniform.type === 0x8B5E || uniform.type === 0x8B60) {\r\n                    const unitNb: number = currTextureUnitNb;\r\n                    types[uniform.type].binder(gl, uniform.loc, unitNb, uniform.value);\r\n                    currTextureUnitNb++;\r\n                } else {\r\n                    types[uniform.type].binder(gl, uniform.loc, uniform.value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindAttributes(): void {\r\n        Object.keys(this.a).forEach((aName) => {\r\n            const attribute = this.a[aName];\r\n            if (attribute.VBO !== null) {\r\n                attribute.VBO.bind(attribute.loc);\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindUniformsAndAttributes(): void {\r\n        this.bindUniforms();\r\n        this.bindAttributes();\r\n    }\r\n\r\n    private introspection(): void {\r\n        const gl = super.gl();\r\n\r\n        this.uCount = gl.getProgramParameter(this.id, gl.ACTIVE_UNIFORMS);\r\n        this.u = [];\r\n        for (let i = 0; i < this.uCount; ++i) {\r\n            const uniform = gl.getActiveUniform(this.id, i);\r\n            const name = uniform.name;\r\n\r\n            this.u[name] = {\r\n                loc: gl.getUniformLocation(this.id, name),\r\n                size: uniform.size,\r\n                type: uniform.type,\r\n                value: null,\r\n            };\r\n        }\r\n\r\n        this.aCount = gl.getProgramParameter(this.id, gl.ACTIVE_ATTRIBUTES);\r\n        this.a = [];\r\n        for (let i = 0; i < this.aCount; ++i) {\r\n            const attribute = gl.getActiveAttrib(this.id, i);\r\n            const name = attribute.name;\r\n\r\n            this.a[name] = {\r\n                VBO: null,\r\n                loc: gl.getAttribLocation(this.id, name),\r\n                size: attribute.size,\r\n                type: attribute.type,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShaderProgram;\r\n","import GLResource from \"./gl-resource\";\r\n\r\nclass VBO extends GLResource {\r\n    public static createQuad(gl: WebGLRenderingContext, minX: number, minY: number, maxX: number, maxY: number): VBO {\r\n        const vert = [\r\n            minX, minY,\r\n            maxX, minY,\r\n            minX, maxY,\r\n            maxX, maxY,\r\n        ];\r\n\r\n        return new VBO(gl, new Float32Array(vert), 2, gl.FLOAT);\r\n    }\r\n\r\n    private id: WebGLBuffer;\r\n    private size: number;\r\n    private type: GLenum;\r\n    private normalize: GLboolean;\r\n    private stride: GLsizei;\r\n    private offset: GLintptr;\r\n\r\n    constructor(gl: WebGLRenderingContext, array: any, size: number, type: GLenum) {\r\n        super(gl);\r\n\r\n        this.id = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        this.size = size;\r\n        this.type = type;\r\n        this.normalize = false;\r\n        this.stride = 0;\r\n        this.offset = 0;\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        this.gl().deleteBuffer(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public bind(location: GLuint): void {\r\n        const gl = super.gl();\r\n\r\n        gl.enableVertexAttribArray(location);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.vertexAttribPointer(location, this.size, this.type, this.normalize, this.stride, this.offset);\r\n    }\r\n}\r\n\r\nexport default VBO;\r\n","class Viewport {\r\n    public static setFullCanvas(gl: WebGLRenderingContext): void {\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n\r\n    public lower: number;\r\n    public left: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(left: number, lower: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.lower = lower;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public set(gl: WebGLRenderingContext): void {\r\n        gl.viewport(this.lower, this.left, this.width, this.height);\r\n    }\r\n}\r\n\r\nexport default Viewport;\r\n","import Converter from \"./converter\";\r\nimport { Format, FormatUtils } from \"./format-utils\";\r\nimport * as GlCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\nimport Viewport from \"./gl-utils/viewport\";\r\nimport { Parameters } from \"./parameters\";\r\nimport Viewer from \"./viewer\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\nfunction main() {\r\n    function resetEditControls() {\r\n        Parameters.paddingTop = 0;\r\n        Parameters.paddingBottom = 0;\r\n        Parameters.paddingBack = 0;\r\n        Parameters.rotateZ = 0;\r\n        Parameters.flipVertically = false;\r\n    }\r\n\r\n    Page.Canvas.showLoader(true);\r\n\r\n    Parameters.onImageLoadObservers.push(resetEditControls);\r\n\r\n    Parameters.image = new Image();\r\n    Parameters.image.src = \"./images/skybox.jpg\";\r\n\r\n    Parameters.inputFormat = Format.Skybox;\r\n\r\n    Parameters.outputFormat = Format.Skysphere;\r\n    Parameters.previewOutput = false;\r\n\r\n    Parameters.fov = 70 * Math.PI / 180;\r\n    Parameters.showFrame = false;\r\n    resetEditControls();\r\n\r\n    const glParams = {\r\n        alpha: false,\r\n        preserveDrawingBuffer: true,\r\n    };\r\n    if (!GlCanvas.initGL(glParams)) {\r\n        return;\r\n    }\r\n\r\n    const viewer = new Viewer();\r\n    const converter = new Converter();\r\n\r\n    let forceRedraw = false;\r\n\r\n    Page.FileControl.addDownloadObserver(\"file-download-id\", () => {\r\n        const idealWidth = Parameters.image.width * Parameters.outputPercentage;\r\n        const width = Math.pow(2, Math.floor(Math.log(idealWidth) * Math.LOG2E));\r\n        const height = width / FormatUtils.ratio(Parameters.outputFormat);\r\n\r\n        const canvas = Page.Canvas.getCanvas() as HTMLCanvasElement;\r\n\r\n        /* Update CSS to allow the canvas to have the correct size */\r\n        canvas.style.position = \"absolute\";\r\n        canvas.style.width = width + \"px\";\r\n        canvas.style.height = height + \"px\";\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        GlCanvas.adjustSize();\r\n        Viewport.setFullCanvas(gl);\r\n\r\n        /* tslint:disable:no-bitwise */\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        converter.draw(viewer.texture);\r\n        /* tslint:disable:no-bitwise */\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        converter.draw(viewer.texture);\r\n        /* tslint:enable:no-bitwise */\r\n\r\n        function restoreCanvas() {\r\n            /* Restore CSS */\r\n            canvas.style.position = \"\";\r\n            canvas.style.width = \"\";\r\n            canvas.style.height = \"\";\r\n\r\n            forceRedraw = true;\r\n        }\r\n\r\n        if ((canvas as any).msToBlob) { // for IE\r\n            const blob = (canvas as any).msToBlob();\r\n            (window.navigator as any).msSaveBlob(blob, \"image.png\");\r\n            restoreCanvas();\r\n        } else {\r\n            canvas.toBlob((blob) => {\r\n                const link = document.createElement(\"a\");\r\n                link.download = \"image.png\";\r\n                link.href = URL.createObjectURL(blob);\r\n                link.click();\r\n\r\n                restoreCanvas();\r\n            });\r\n        }\r\n    });\r\n\r\n    const previewViewport = new Viewport(0, 0, 1, 1);\r\n\r\n    function mainLoop() {\r\n        viewer.update();\r\n\r\n        if (viewer.needToRedraw || forceRedraw) {\r\n            GlCanvas.adjustSize();\r\n            Viewport.setFullCanvas(gl);\r\n\r\n            /* tslint:disable:no-bitwise */\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            /* tslint:enable:no-bitwise */\r\n\r\n            viewer.draw();\r\n\r\n            if (Parameters.previewOutput) {\r\n                previewViewport.width = 0.3 * gl.drawingBufferWidth;\r\n                previewViewport.height = previewViewport.width / FormatUtils.ratio(Parameters.outputFormat);\r\n                previewViewport.set(gl);\r\n                converter.draw(viewer.texture);\r\n            }\r\n\r\n            forceRedraw = false;\r\n        }\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n\r\n    requestAnimationFrame(mainLoop);\r\n}\r\n\r\nmain();\r\n","import { Format, FormatUtils } from \"./format-utils\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\ntype OnChangeCallback = () => void;\r\n\r\nconst onChangeObservers = new Array<OnChangeCallback>();\r\nfunction callOnChangeObservers(): void {\r\n    for (const callback of Parameters.onChangeObservers) {\r\n        callback();\r\n    }\r\n}\r\n\r\ntype OnImageLoadCallback = (img: HTMLImageElement) => void;\r\nconst onImageLoadObservers = new Array<OnImageLoadCallback>();\r\n\r\nlet image: HTMLImageElement;\r\n\r\nconst FILE_UPLOAD_CONTROL = \"file-upload-id\";\r\nPage.FileControl.addUploadObserver(FILE_UPLOAD_CONTROL, (files: FileList) => {\r\n    Page.Canvas.showLoader(true);\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n        Parameters.image = new Image();\r\n        Parameters.image.src = reader.result as any;\r\n    };\r\n\r\n    reader.readAsDataURL(files[0]);\r\n});\r\n\r\ntype OnInputFormatChangeCallback = (previous: Format, newOne: Format) => void;\r\nconst onInputFormatChangeObservers = new Array<OnInputFormatChangeCallback>();\r\n\r\nlet inputFormat: Format;\r\nconst INPUT_FORMAT_CONTROL = \"input-format\";\r\nPage.Tabs.addObserver(INPUT_FORMAT_CONTROL, (values: string[]) => {\r\n    const previous = inputFormat;\r\n    inputFormat = FormatUtils.parseString(values[0]);\r\n\r\n    for (const callback of onInputFormatChangeObservers) {\r\n        callback(previous, inputFormat);\r\n    }\r\n});\r\n\r\nlet outputFormat: Format;\r\nconst OUTPUT_FORMAT_CONTROL = \"output-format\";\r\nPage.Tabs.addObserver(OUTPUT_FORMAT_CONTROL, (values: string[]) => {\r\n    outputFormat = FormatUtils.parseString(values[0]);\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet outputPreview: boolean;\r\nconst OUPUT_PREVIEW_CONTROL = \"output-preview-id\";\r\nPage.Checkbox.addObserver(OUPUT_PREVIEW_CONTROL, (checked: boolean) => {\r\n    outputPreview = checked;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet fov: number;\r\nconst FOV_CONTROL = \"fov-range-id\";\r\nPage.Range.addObserver(FOV_CONTROL, (newFov: number) => {\r\n    fov = Math.PI / 180 * newFov;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet showFrame: boolean;\r\nconst FRAME_CONTROL = \"frame-checkbox-id\";\r\nPage.Checkbox.addObserver(FRAME_CONTROL, (checked: boolean) => {\r\n    showFrame = checked;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet paddingTOP: number;\r\nconst PADDING_TOP_CONTROL = \"padding-top-range-id\";\r\nPage.Range.addObserver(PADDING_TOP_CONTROL, (margin: number) => {\r\n    paddingTOP = margin;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet paddingBottom: number;\r\nconst PADDING_BOTTOM_CONTROL = \"padding-bottom-range-id\";\r\nPage.Range.addObserver(PADDING_BOTTOM_CONTROL, (margin: number) => {\r\n    paddingBottom = margin;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet paddingBack: number;\r\nconst PADDING_BACK_CONTROL = \"padding-back-range-id\";\r\nPage.Range.addObserver(PADDING_BACK_CONTROL, (margin: number) => {\r\n    paddingBack = margin;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet rotateZ: number;\r\nconst ROTATE_Z_CONTROL = \"rotate-z-range-id\";\r\nPage.Range.addObserver(ROTATE_Z_CONTROL, (r: number) => {\r\n    rotateZ = r;\r\n    callOnChangeObservers();\r\n});\r\n\r\nlet flipVertically: boolean;\r\nconst FLIP_VERTICALLY_CONTROL = \"flip-vertically-checkbox-id\";\r\nPage.Checkbox.addObserver(FLIP_VERTICALLY_CONTROL, (checked: boolean) => {\r\n    flipVertically = checked;\r\n    callOnChangeObservers();\r\n});\r\n\r\nPage.Canvas.Observers.mouseWheel.push((delta: number) => {\r\n    Parameters.fov += delta * 10 * Math.PI / 180;\r\n});\r\n\r\nclass Parameters {\r\n    private constructor() { }\r\n\r\n    public static get onChangeObservers(): OnChangeCallback[] {\r\n        return onChangeObservers;\r\n    }\r\n\r\n    public static get onInputFormatChangeObservers(): OnInputFormatChangeCallback[] {\r\n        return onInputFormatChangeObservers;\r\n    }\r\n\r\n    public static get onImageLoadObservers(): OnImageLoadCallback[] {\r\n        return onImageLoadObservers;\r\n    }\r\n\r\n    public static set image(img: HTMLImageElement) {\r\n        const ERROR_MESSAGE_ID = \"invalid-image\";\r\n\r\n        image = img;\r\n        image.addEventListener(\"load\", () => {\r\n            Page.Demopage.removeErrorMessage(ERROR_MESSAGE_ID);\r\n            for (const callback of onImageLoadObservers) {\r\n                callback(image);\r\n            }\r\n\r\n            callOnChangeObservers();\r\n        });\r\n\r\n        image.addEventListener(\"error\", () => {\r\n            Page.Demopage.setErrorMessage(ERROR_MESSAGE_ID, \"The image could not be loaded.\");\r\n            Page.Canvas.showLoader(false);\r\n            console.error(\"Image could not be loaded.\");\r\n        });\r\n    }\r\n    public static get image(): HTMLImageElement {\r\n        return image;\r\n    }\r\n\r\n    public static set inputFormat(value: Format) {\r\n        inputFormat = value;\r\n        Page.Tabs.setValues(INPUT_FORMAT_CONTROL, [value]);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get inputFormat(): Format {\r\n        return inputFormat;\r\n    }\r\n\r\n    public static set previewOutput(show: boolean) {\r\n        outputPreview = show;\r\n        Page.Checkbox.setChecked(OUPUT_PREVIEW_CONTROL, show);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get previewOutput(): boolean {\r\n        return outputPreview;\r\n    }\r\n\r\n    public static set outputFormat(value: Format) {\r\n        outputFormat = value;\r\n        Page.Tabs.setValues(OUTPUT_FORMAT_CONTROL, [value]);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get outputFormat(): Format {\r\n        return outputFormat;\r\n    }\r\n\r\n    public static get outputPercentage(): number {\r\n        return +Page.Tabs.getValues(\"output-quality\")[0] / 100;\r\n    }\r\n\r\n    public static set fov(value: number) {\r\n        Page.Range.setValue(FOV_CONTROL, value * 180 / Math.PI);\r\n        fov = Page.Range.getValue(FOV_CONTROL) * Math.PI / 180;\r\n        callOnChangeObservers();\r\n    }\r\n    public static get fov(): number {\r\n        return fov;\r\n    }\r\n\r\n    public static set showFrame(show: boolean) {\r\n        showFrame = show;\r\n        Page.Checkbox.setChecked(FRAME_CONTROL, show);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get showFrame(): boolean {\r\n        return showFrame;\r\n    }\r\n\r\n    public static set paddingTop(margin: number) {\r\n        Page.Range.setValue(PADDING_TOP_CONTROL, margin);\r\n        paddingTOP = Page.Range.getValue(PADDING_TOP_CONTROL);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get paddingTop(): number {\r\n        return paddingTOP;\r\n    }\r\n\r\n    public static set paddingBottom(margin: number) {\r\n        Page.Range.setValue(PADDING_BOTTOM_CONTROL, margin);\r\n        paddingBottom = Page.Range.getValue(PADDING_BOTTOM_CONTROL);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get paddingBottom(): number {\r\n        return paddingBottom;\r\n    }\r\n\r\n    public static set paddingBack(margin: number) {\r\n        Page.Range.setValue(PADDING_BACK_CONTROL, margin);\r\n        paddingBack = Page.Range.getValue(PADDING_BACK_CONTROL);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get paddingBack(): number {\r\n        return paddingBack;\r\n    }\r\n\r\n    public static set rotateZ(r: number) {\r\n        Page.Range.setValue(ROTATE_Z_CONTROL, r);\r\n        rotateZ = Page.Range.getValue(ROTATE_Z_CONTROL);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get rotateZ(): number {\r\n        return rotateZ;\r\n    }\r\n\r\n    public static set flipVertically(show: boolean) {\r\n        flipVertically = show;\r\n        Page.Checkbox.setChecked(FLIP_VERTICALLY_CONTROL, show);\r\n        callOnChangeObservers();\r\n    }\r\n    public static get flipVertically(): boolean {\r\n        return flipVertically;\r\n    }\r\n}\r\n\r\nconst css = document.createElement(\"style\");\r\ncss.type = \"text/css\";\r\ncss.innerHTML = \"canvas:active { cursor: grab; }\";\r\ndocument.body.appendChild(css);\r\n\r\nexport {\r\n    Parameters,\r\n};\r\n","import { gl } from \"./gl-utils/gl-canvas\";\r\nimport GLResource from \"./gl-utils/gl-resource\";\r\nimport Shader from \"./gl-utils/shader\";\r\nimport * as ShaderManager from \"./gl-utils/shader-manager\";\r\nimport VBO from \"./gl-utils/vbo\";\r\n\r\nimport { Mat4 } from \"./gl-utils/matrix/mat4\";\r\nimport { Vec3 } from \"./gl-utils/matrix/vec3\";\r\n\r\nimport { Format, FormatUtils } from \"./format-utils\";\r\nimport { Parameters } from \"./parameters\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\nclass Viewer extends GLResource {\r\n    private _shaderSkybox: Shader;\r\n    private _shaderSkysphere: Shader;\r\n    private _shaderTinyplanet: Shader;\r\n\r\n    private _vbo: VBO;\r\n    private _texture: WebGLTexture;\r\n\r\n    private _eyePos: Vec3;\r\n    private _vertical: Vec3;\r\n\r\n    private _tmpMatrix: Mat4;\r\n    private _projToWorldMatrix: Mat4;\r\n\r\n    private _theta: number;\r\n    private _phi: number;\r\n\r\n    private _needToReloadImage: boolean;\r\n    private _needToRedraw: boolean;\r\n\r\n    constructor() {\r\n        super(gl);\r\n\r\n        this._eyePos = new Vec3(0, 0, 0);\r\n        this._vertical = new Vec3(0, 0, 1);\r\n\r\n        this._tmpMatrix = new Mat4();\r\n        this._projToWorldMatrix = new Mat4();\r\n\r\n        this.resetThetaPhi();\r\n\r\n        this._needToReloadImage = false;\r\n        this._needToRedraw = true;\r\n        const doNeedToRedraw = () => { this._needToRedraw = true; };\r\n        const doNeedToReloadImage = () => {\r\n            doNeedToRedraw();\r\n            this.resetThetaPhi();\r\n            this._needToReloadImage = true;\r\n        };\r\n\r\n        Parameters.onInputFormatChangeObservers.push((previous: Format, newOne: Format) => {\r\n            if (previous === Format.Skybox || newOne === Format.Skybox) {\r\n                Page.Canvas.showLoader(true);\r\n                doNeedToReloadImage();\r\n            } else {\r\n                doNeedToRedraw();\r\n            }\r\n        });\r\n        Parameters.onChangeObservers.push(doNeedToRedraw);\r\n        Page.Canvas.Observers.canvasResize.push(doNeedToRedraw);\r\n        Page.Canvas.Observers.mouseDrag.push(doNeedToRedraw);\r\n\r\n        this._vbo = VBO.createQuad(gl, -1, -1, 1, 1);\r\n\r\n        this.buildShader(\"_shaderSkysphere\", \"viewer.vert\", \"viewerSkysphere.frag\");\r\n        this.buildShader(\"_shaderSkybox\", \"viewer.vert\", \"viewerSkybox.frag\");\r\n        this.buildShader(\"_shaderTinyplanet\", \"viewer.vert\", \"viewerTinyplanet.frag\");\r\n\r\n        Page.Canvas.Observers.mouseDrag.push((dX: number, dY: number) => {\r\n            this._phi += Parameters.fov * Page.Canvas.getAspectRatio() * dX;\r\n            this._theta -= Parameters.fov * dY;\r\n            this._theta = Math.min(Math.PI - 0.001, Math.max(0.001, this._theta));\r\n            doNeedToRedraw();\r\n        });\r\n\r\n        Parameters.onImageLoadObservers.push((image: HTMLImageElement) => {\r\n            Parameters.inputFormat = FormatUtils.guessFormat(image);\r\n            doNeedToReloadImage();\r\n        });\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        if (this._vbo) {\r\n            this._vbo.freeGLResources();\r\n            this._vbo = null;\r\n        }\r\n\r\n        if (this._texture) {\r\n            gl.deleteTexture(this._texture);\r\n            this._texture = null;\r\n        }\r\n\r\n        if (this._shaderSkybox) {\r\n            this._shaderSkybox.freeGLResources();\r\n            this._shaderSkybox = null;\r\n        }\r\n\r\n        if (this._shaderSkysphere) {\r\n            this._shaderSkysphere.freeGLResources();\r\n            this._shaderSkysphere = null;\r\n        }\r\n\r\n        if (this._shaderTinyplanet) {\r\n            this._shaderTinyplanet.freeGLResources();\r\n            this._shaderTinyplanet = null;\r\n        }\r\n    }\r\n\r\n    public get texture(): WebGLTexture {\r\n        return this._texture;\r\n    }\r\n\r\n    public get needToRedraw(): boolean {\r\n        return this._needToRedraw;\r\n    }\r\n\r\n    public update(): void {\r\n        if (this._needToReloadImage) {\r\n            if (Parameters.inputFormat === Format.Skybox) {\r\n                this.splitAndLoadSkybox(Parameters.image);\r\n            } else {\r\n                this.loadTexture(Parameters.image);\r\n            }\r\n\r\n            this._needToReloadImage = false;\r\n            Page.Canvas.showLoader(false);\r\n        }\r\n    }\r\n\r\n    public draw(): void {\r\n        let shader: Shader;\r\n        if (Parameters.inputFormat === Format.Skybox) {\r\n            shader = this._shaderSkybox;\r\n        } else if (Parameters.inputFormat === Format.Skysphere) {\r\n            shader = this._shaderSkysphere;\r\n        } else {\r\n            shader = this._shaderTinyplanet;\r\n        }\r\n\r\n        if (shader && this._texture) {\r\n            this.recomputeMatrices();\r\n\r\n            /* tslint:disable:no-string-literal */\r\n            shader.u[\"uProjToWorld\"].value = this._projToWorldMatrix.val;\r\n            shader.u[\"uTexture\"].value = this._texture;\r\n            shader.u[\"uPaddingTop\"].value = Parameters.paddingTop;\r\n            shader.u[\"uPaddingBottom\"].value = Parameters.paddingBottom;\r\n            shader.u[\"uPaddingBack\"].value = Parameters.paddingBack;\r\n            shader.u[\"uRotateZ\"].value = Parameters.rotateZ;\r\n            shader.u[\"uFlipVertically\"].value = Parameters.flipVertically ? -1 : 1;\r\n            shader.u[\"uShowFrame\"].value = Parameters.showFrame ? 1 : 0;\r\n            /* tslint:enable:no-string-literal */\r\n\r\n            shader.use();\r\n            shader.bindUniformsAndAttributes();\r\n\r\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n        }\r\n\r\n        this._needToRedraw = false;\r\n    }\r\n\r\n    private resetThetaPhi(): void {\r\n        this._theta = 0.5 * Math.PI;\r\n        this._phi = 0;\r\n        this._needToRedraw = true;\r\n    }\r\n\r\n    private loadTexture(image: HTMLImageElement): void {\r\n        gl.deleteTexture(this._texture);\r\n        this._texture = gl.createTexture();\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    }\r\n\r\n    private splitAndLoadSkybox(image: HTMLImageElement): void {\r\n        function chooseUpperPowerOfTwo(n: number): number {\r\n            return Math.pow(2, Math.ceil(Math.log(n) * Math.LOG2E));\r\n        }\r\n\r\n        const side = chooseUpperPowerOfTwo(Math.floor(Math.max(image.width / 4, image.height / 3)));\r\n\r\n        gl.deleteTexture(this._texture);\r\n        this._texture = gl.createTexture();\r\n\r\n        /* Use a temporary canvas to split the image into each face of the cube */\r\n        const context = document.createElement(\"canvas\").getContext(\"2d\");\r\n        context.canvas.width = side;\r\n        context.canvas.height = side;\r\n\r\n        const sidesStyles = [\r\n            { target: gl.TEXTURE_CUBE_MAP_POSITIVE_X, position: { x: 2, y: 1 }, rotation: 0.5 * Math.PI },  // front\r\n            { target: gl.TEXTURE_CUBE_MAP_NEGATIVE_X, position: { x: 0, y: 1 }, rotation: -0.5 * Math.PI }, // back\r\n            { target: gl.TEXTURE_CUBE_MAP_POSITIVE_Y, position: { x: 1, y: 1 }, rotation: -Math.PI },       // left\r\n            { target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, position: { x: 3, y: 1 }, rotation: 0 },              // right\r\n            { target: gl.TEXTURE_CUBE_MAP_POSITIVE_Z, position: { x: 1, y: 0 }, rotation: Math.PI },        // top\r\n            { target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, position: { x: 1, y: 2 }, rotation: 0 },              // bottom\r\n        ];\r\n\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, this._texture);\r\n\r\n        context.translate(side, 0);\r\n        context.scale(-1, 1);\r\n\r\n        const sourceWidth = image.width / 4;\r\n        const sourceHeight = image.height / 3;\r\n        for (const sideStyle of sidesStyles) {\r\n            context.translate(0.5 * side, 0.5 * side);\r\n            context.rotate(sideStyle.rotation);\r\n            context.translate(-0.5 * side, -0.5 * side);\r\n\r\n            context.drawImage(image,\r\n                sideStyle.position.x * sourceWidth, sideStyle.position.y * sourceHeight,\r\n                sourceWidth, sourceHeight,\r\n                0, 0, side, side);\r\n\r\n            gl.texImage2D(sideStyle.target, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, context.canvas);\r\n\r\n            context.translate(0.5 * side, 0.5 * side);\r\n            context.rotate(-sideStyle.rotation);\r\n            context.translate(-0.5 * side, -0.5 * side);\r\n        }\r\n\r\n        gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    }\r\n\r\n    private buildShader(name: string, vertex: string, fragment: string): void {\r\n        ShaderManager.buildShader(\r\n            {\r\n                fragmentFilename: fragment,\r\n                vertexFilename: vertex,\r\n            },\r\n            (shader) => {\r\n                if (shader !== null) {\r\n                    /* tslint:disable:no-string-literal */\r\n                    this[name] = shader;\r\n                    this[name].a[\"aCorner\"].VBO = this._vbo;\r\n                    /* tslint:enable:no-string-literal */\r\n                    this._needToRedraw = true;\r\n                }\r\n            });\r\n    }\r\n\r\n    private recomputeMatrices(): void {\r\n        const lookAt = new Vec3(\r\n            Math.sin(this._theta) * Math.cos(this._phi),\r\n            Math.sin(this._theta) * Math.sin(this._phi),\r\n            Math.cos(this._theta),\r\n        );\r\n        this._projToWorldMatrix.lookAt(this._eyePos, lookAt, this._vertical);\r\n        this._projToWorldMatrix.invert();\r\n\r\n        const canvas = gl.canvas as HTMLCanvasElement;\r\n        const aspectRatio = canvas.clientWidth / canvas.clientHeight;\r\n        this._tmpMatrix.perspectiveInverse(Parameters.fov, aspectRatio, 0.1, Infinity);\r\n\r\n        // no need to remove translations from invViewMatrix since camera is on world (0,0,0)\r\n        // this._invViewMatrix[3*4 + 0] = 0;\r\n        // this._invViewMatrix[3*4 + 1] = 0;\r\n        // this._invViewMatrix[3*4 + 2] = 0;\r\n        this._projToWorldMatrix.multiplyRight(this._tmpMatrix);\r\n    }\r\n}\r\n\r\nexport default Viewer;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(633);\n"],"names":["gl","_vbo","createQuad","buildShader","freeGLResources","this","deleteShader","draw","texture","shader","getShader","Parameters","inputFormat","outputFormat","u","value","paddingTop","paddingBottom","paddingBack","rotateZ","flipVertically","use","bindUniformsAndAttributes","drawArrays","TRIANGLE_STRIP","name","vertex","fragment","ShaderManager","fragmentFilename","vertexFilename","a","VBO","Format","Skybox","_shaderBoxToBox","Skysphere","_shaderBoxToSphere","_shaderBoxToPlanet","_shaderSphereToBox","_shaderSphereToSphere","_shaderSphereToPlanet","Tinyplanet","_shaderPlanetToBox","_shaderPlanetToSphere","_shaderPlanetToPlanet","Converter","guessFormat","image","FormatUtils","mayBeSkybox","ratio","width","height","Math","abs","parseString","str","format","context","document","createElement","getContext","canvas","drawImage","testedPixels","x","y","reference","getImageData","data","tested","sample","i","initGL","flags","setError","message","Page","Demopage","setErrorMessage","Canvas","getCanvas","disable","CULL_FACE","DEPTH_TEST","BLEND","clearColor","adjustSize","hidpi","cssPixel","window","devicePixelRatio","floor","clientWidth","clientHeight","_gl","GLResource","_val","Float32Array","identity","Mat4","_tmpMatrix","lookAt","eye","center","up","equals","z","Vec3","substract","normalize","crossProduct","dotProduct","multiplyRight","m2","tmp","tmpMatrix","myself","other","iCol","iRow","swapWithTmpMatrix","invert","m","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","tmpVals","perspective","fovy","aspectRatio","nearPlane","farPlane","f","tan","Infinity","perspectiveInverse","EPSILON","v1","v2","divideByScalar","scalar","norm","sqrt","length","cachedShaders","infos","callback","sourcesPending","sourcesFailed","loadedSource","success","vert","ShaderSources","getSource","frag","loadSource","registerShader","callAndClearCallbacks","cached","callbacks","cachedCallback","failed","pending","builtShader","push","cachedSources","filename","text","XMLHttpRequest","open","onload","readyState","status","responseText","console","error","statusText","onerror","send","notImplemented","location","alert","types","binder","uniform2fv","uniform3fv","uniform4fv","uniform2iv","uniform3iv","uniform4iv","uniform1i","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","unitNb","activeTexture","bindTexture","TEXTURE_2D","TEXTURE_CUBE_MAP","Array","isArray","uniform1iv","uniform1fv","uniform1f","vertexSource","fragmentSource","createShader","type","source","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","id","uCount","aCount","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","introspection","getProgramInfoLog","deleteProgram","useProgram","bindUniforms","currTextureUnitNb","Object","keys","forEach","uName","uniform","loc","bindAttributes","aName","attribute","bind","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","size","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","ShaderProgram","array","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","stride","offset","minX","minY","maxX","maxY","FLOAT","deleteBuffer","enableVertexAttribArray","vertexAttribPointer","left","lower","setFullCanvas","viewport","drawingBufferWidth","drawingBufferHeight","set","Viewport","resetEditControls","showLoader","onImageLoadObservers","Image","src","previewOutput","fov","PI","showFrame","GlCanvas","alpha","preserveDrawingBuffer","viewer","converter","forceRedraw","FileControl","addDownloadObserver","idealWidth","outputPercentage","pow","log","LOG2E","restoreCanvas","style","position","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","msToBlob","blob","navigator","msSaveBlob","toBlob","link","download","href","URL","createObjectURL","click","previewViewport","requestAnimationFrame","mainLoop","update","needToRedraw","main","onChangeObservers","callOnChangeObservers","addUploadObserver","files","reader","FileReader","result","readAsDataURL","onInputFormatChangeObservers","INPUT_FORMAT_CONTROL","Tabs","addObserver","values","previous","outputPreview","OUTPUT_FORMAT_CONTROL","OUPUT_PREVIEW_CONTROL","Checkbox","checked","FOV_CONTROL","Range","newFov","paddingTOP","FRAME_CONTROL","PADDING_TOP_CONTROL","margin","PADDING_BOTTOM_CONTROL","PADDING_BACK_CONTROL","ROTATE_Z_CONTROL","r","FLIP_VERTICALLY_CONTROL","Observers","mouseWheel","delta","img","ERROR_MESSAGE_ID","addEventListener","removeErrorMessage","setValues","show","setChecked","getValues","setValue","getValue","css","innerHTML","body","appendChild","_eyePos","_vertical","_projToWorldMatrix","resetThetaPhi","_needToReloadImage","_needToRedraw","doNeedToRedraw","doNeedToReloadImage","newOne","canvasResize","mouseDrag","dX","dY","_phi","getAspectRatio","_theta","min","max","_texture","deleteTexture","_shaderSkybox","_shaderSkysphere","_shaderTinyplanet","splitAndLoadSkybox","loadTexture","recomputeMatrices","val","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","n","side","ceil","sidesStyles","target","TEXTURE_CUBE_MAP_POSITIVE_X","rotation","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","translate","scale","sourceWidth","sourceHeight","sideStyle","rotate","generateMipmap","LINEAR_MIPMAP_LINEAR","sin","cos","Viewer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"sourceRoot":""}